B000 000			nop						Amber Liu, al7bf, addition.ibcm
C00A 001			jmp 	start 			skip around the variables
0000 002	x		dw 		0 				int x
0000 003	y		dw		0				int y
0000 004	z		dw		0				int z
0000 005	total	dw		0				int total
0000 006	zero	dw		0				0
0000 007									space for changes
0000 008
0000 009
1000 00A	start	readH					read input
4002 00B			store	x				stores x
1000 00C			readH					read second input
4003 00D			store	y				stores y
1000 00E			readH					read third input
4004 00F			store	z				stores z
3005 010			load	total			loads total(sum) into accumulator
5002 011			add		x				add x to accum
5003 012			add		y				add y to accum
5004 013			add		z				add z to accum
1800 014			printH					print sum
D017 015			jmpe	xit				jumps to address if accum is 0
C00A 016			jmp 	start			go back to start
3002 017	xit		load 	x 				load x in accumulator
1800 018			printH					print x
3003 019			load 	y				load y
1800 01A			printH					print y
3003 01B			load 	z 				load z
1800 01C			printH					print z
0000 01D			halt					halt